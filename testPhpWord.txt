use PhpOffice\PhpWord\TemplateProcessor;
use yii\web\Controller;

class ExportController extends Controller
{
    public function actionExportParticipants()
    {
        // Получаем данные участников из модели
        $participants = Participant::find()->all(); // Замените Participant на вашу модель

        // Путь к шаблону
        $templatePath = Yii::getAlias('@app/templates/template.docx');
        if (!file_exists($templatePath)) {
            throw new \yii\web\HttpException(500, 'Шаблон не найден.');
        }

        $templateProcessor = new TemplateProcessor($templatePath);

        // Клонируем первую строку для каждого участника
        $templateProcessor->cloneRow('fio', count($participants));

        // Клонируем вторую строку для каждого участника
        $templateProcessor->cloneRow('fio2', count($participants));

        // Заполняем данные для каждой строки
        foreach ($participants as $index => $participant) {
            $rowIndex = $index + 1; // Индексация строк начинается с 1

            // Заполняем первую строку
            $templateProcessor->setValue("fio#{$rowIndex}", $participant->fio);
            $templateProcessor->setValue("login#{$rowIndex}", $participant->login);
            $templateProcessor->setValue("password#{$rowIndex}", $participant->password);

            // Заполняем вторую строку
            $templateProcessor->setValue("fio2#{$rowIndex}", $participant->fio . ' (доп.)'); // Пример данных
            $templateProcessor->setValue("login2#{$rowIndex}", $participant->login . ' (доп.)');
            $templateProcessor->setValue("password2#{$rowIndex}", $participant->password . ' (доп.)');
        }

        // Генерируем имя файла
        $filename = 'participants_' . date('Y-m-d') . '.docx';

        // Устанавливаем заголовки для скачивания
        header('Content-Type: application/vnd.openxmlformats-officedocument.wordprocessingml.document');
        header('Content-Disposition: attachment; filename="' . $filename . '"');
        header('Cache-Control: max-age=0');

        // Сохраняем документ в поток вывода
        try {
            $templateProcessor->saveAs('php://output');
        } catch (\Exception $e) {
            Yii::error('Ошибка при экспорте участников: ' . $e->getMessage());
            throw new \yii\web\HttpException(500, 'Ошибка при генерации документа.');
        }

        exit;
    }
}